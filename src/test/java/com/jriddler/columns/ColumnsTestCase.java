package com.jriddler.columns;

import com.jriddler.TestDbInstance;
import org.hamcrest.CoreMatchers;
import org.junit.Assert;
import org.junit.Test;

import java.util.List;

/**
 * Test {@link Columns}.
 */
@SuppressWarnings("MagicNumber")
public final class ColumnsTestCase extends TestDbInstance {

    /**
     * Test that actual table columns were fetched.
     */
    @Test
    public void testColumnNames() {
        final List<ColumnName> columns = ColumnName.names(
                new Columns(
                        "users",
                        TestDbInstance.datasource
                )
        );
        Assert.assertThat(
                columns.get(0).name(),
                CoreMatchers.is("id")
        );
        Assert.assertThat(
                columns.get(1).name(),
                CoreMatchers.is("name")
        );
        Assert.assertThat(
                columns.get(2).name(),
                CoreMatchers.is("surname")
        );
        Assert.assertThat(
                columns.get(3).name(),
                CoreMatchers.is("age")
        );
        Assert.assertThat(
                columns.get(4).name(),
                CoreMatchers.is("active")
        );
        Assert.assertThat(
                columns.get(5).name(),
                CoreMatchers.is("birthday")
        );
    }

    /**
     * Test that autogenerated keys are skipped.
     * Managers table has 4 columns
     * two of them are serials
     */
    @Test
    public void testAutoGeneratedColumns() {
        final List<ColumnName> columns = ColumnName.names(
                new Columns(
                        "managers",
                        TestDbInstance.datasource
                )
        );
        Assert.assertThat(
                columns.size(),
                CoreMatchers.is(2)
        );
        Assert.assertThat(
                columns.get(0).name(),
                CoreMatchers.is("id3")
        );
        Assert.assertThat(
                columns.get(1).name(),
                CoreMatchers.is("id4")
        );
    }
}
